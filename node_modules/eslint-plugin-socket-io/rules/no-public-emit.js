const get = require("lodash/get");
const { errorMessage } = require("../errorMessage");

module.exports = {
  create: function(context) {

    const isSocketsEmit = (node) => {
      const isEmitCall = node.property.name === "emit";
      const isCalledFromSockets =  get(node, "object.name") === "sockets" || get(node, "object.property.name") === "sockets";
      if (isEmitCall && isCalledFromSockets) {
        return true;
      } else {
        return false;
      }
    };

    const isEmitEmit = (node) => {
      const isEmitCall = node.property.name === "emit";
      const isCalledFromEmit =  get(node, "object.name") === "emit" ||
        get(node, "object.property.name") === "emit" ||
        get(node, "object.callee.property.name")  === "emit";
      if (isEmitCall && isCalledFromEmit) {
        return true;
      } else {
        return false;
      }
    };

    return {
      MemberExpression: function(node) {
        if (isSocketsEmit(node) || isEmitEmit(node)) {
          context.report(node, errorMessage);
        }
      },
    };
  },
};
